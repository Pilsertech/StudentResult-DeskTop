/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/webauthn-polyfill@0.0.1/webauthn-polyfill.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var defaultTimeout=10,defaultAuthPort=61904,maxTimeout=1800,minTimeout=1,supportedCryptoTypes=(defaultTimeout=30,["FIDO"]);window.webauthn=function(){var t=function(){};function e(t){var e=document.createElement("a");return e.href=t,e.hostname}console.log("Loading WebAuthn polyfill...");var n={"aes-cbc":{name:"AES-CBC",dict:{name:"AES-CBC"},supports:["encrypt","decrypt","generateKey"]},"aes-ctr":{name:"AES-CTR",dict:{name:"AES-CTR"},supports:["encrypt","decrypt","generateKey"]},"aes-gcm":{name:"AES-GCM",dict:{name:"AES-GCM"},supports:["encrypt","decrypt","generateKey"]},pbkdf2:{name:"PBKDF2",dict:{name:"PBKDF2"},supports:["derive_key"]},md2:{name:"MD2",dict:{name:"MD2"},supports:["digest"]},md5:{name:"MD5",dict:{name:"MD5"},supports:["digest"]},"sha-1":{name:"SHA-1",dict:{name:"SHA-1"},supports:["digest"]},"sha-256":{name:"SHA-256",dict:{name:"SHA-256"},supports:["digest"]},"sha-384":{name:"SHA-384",dict:{name:"SHA-384"},supports:["digest"]},"sha-512":{name:"SHA-512",dict:{name:"SHA-512"},supports:["digest"]},"rsassa-pkcs1-v1_5":{name:"RSASSA-PKCS1-v1_5",dict:{name:"RSASSA-PKCS1-v1_5"},supports:["sign","verify","generateKey"]},"rsaes-pkcs1-v1_5":{name:"RSAES-PKCS1-v1_5",dict:{name:"RSAES-PKCS1-v1_5"},supports:["encrypt","decrypt","generateKey"]}};function o(t){var e={};if("string"==typeof t){if(!((t=t.toLowerCase())in n))throw new Error("Unknown algorithm");if(!("dict"in n[t]))throw new Error("Algorithm didn't have dictionary");e=n[t].dict,e=normalizeAlgorithm(e)}else{var o,r,i;for(o in t)"name"===o&&(i=(r=t[o])in n?(i=n[r]).dict.name:r,e[o]=i),"name"!==o&&t[o]in n?e[o]=normalizeAlgorithm(t[o]):e[o]=t[o]}return e}function r(t,e,n){return new Promise((function(o,r){var i,u,s,c,m=window.setTimeout((function(){console.log("makeCredential timed out");var t=new Error("timedOut");r(t)}),1e3*t),p=[];for(i=0;i<a.length;i++)p.push(a[i][e].apply(a[i],n));(u=p,s=[],c=Promise.resolve(null),u.forEach((function(t){c=c.then((function(){return t})).then((function(t){console.log("Got value:",t),s.push(t)})).catch((function(t){s.push(t)}))})),c.then((function(){return s}))).then((function(t){var n;for(window.clearTimeout(m),n=0;n<t.length;n++)if(void 0!==typeof t[n]&&!(t[n]instanceof Error))return console.log(e,"returning",t[n]),o(t[n]);return o(new Error("No successful authenticatons"))})).catch((function(t){return console.log("caught error"),r(t)}))}))}function i(){}t.prototype.makeCredential=function(t,n,i,a,u,s){var c=document.origin,m=e(c);void 0===a&&(a=defaultTimeout),a<minTimeout&&(a=minTimeout),a>maxTimeout&&(a=maxTimeout),void 0===u&&(u=[]),void 0===s&&(s=[]);var p,l=null;for(p=0;p<n.length;p++)if(l=n[p],-1!==supportedCryptoTypes.indexOf(l.type)){var d={alg:l.algorithm,op:"generateKey"};l=null;o(d)}n=l;var f=new ArrayBuffer(JSON.stringify({challenge:i,facet:c,hashAlg:"S256"}));return window.crypto.subtle.digest({name:"SHA-256"},f).then((function(e){return r(a,"authenticatorMakeCredential",[m,t,e,n,u,s])}))},t.prototype.getAssertion=function(t,n,o,i){console.log("getAssertion");var a=document.origin,u=e(a);return void 0===n&&(n=defaultTimeout),n<minTimeout&&(n=minTimeout),n>maxTimeout&&(n=maxTimeout),new Promise(function(e,s){var c=new ArrayBuffer(JSON.stringify({challenge:t,facet:a,hashAlg:"S256"}));return window.crypto.subtle.digest({name:"SHA-256"},c).then((function(e){return r(n,"authenticatorGetAssertion",[u,t,e,o,i])})).then((function(t){return e(t)})).catch((function(t){return s(t)}))}.bind(this))},i.prototype={constructor:i,authenticatorDiscover:function(){},authenticatorMakeCredential:function(){return console.log("got authenticatorMakeCredential"),Promise.resolve(null)},authenticatorGetAssertion:function(){return console.log("got authenticatorGetAssertion"),Promise.resolve(null)},authenticatorCancel:function(){}},t.prototype.fidoAuthenticator=i;var a=[];return t.prototype.addAuthenticator=function(t){t instanceof i?a.push(t):console.log("Adding authenticator: Authenticator was wrong type, failing:",t)},t.prototype.listAuthenticators=function(){return JSON.parse(JSON.stringify(a))},t.prototype.removeAllAuthenticators=function(){a=[]},t.prototype.addExtension=function(t){this._extensionHookList.push(t)},t.prototype.removeExtension=function(t){var e=this._extensionHookList.indexOf(t);-1!==e&&(this._extensionHookList=this._extensionHookList.splice(e,1))},new t}();
//# sourceMappingURL=/sm/737224c409cb3d22ac47075ad2d1d366ebfee8aeb4fa4be013bcd230393aac35.map